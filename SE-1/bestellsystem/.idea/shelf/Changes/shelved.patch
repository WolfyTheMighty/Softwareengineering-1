Index: src/system/impl/OrderBuilderImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package system.impl;\r\n\r\nimport datamodel.Article;\r\nimport datamodel.Customer;\r\nimport datamodel.Order;\r\nimport system.DataRepository;\r\nimport system.InventoryManager;\r\nimport system.RTE.Runtime;\r\n\r\n\r\n/**\r\n * Singleton component that builds orders and stores them in the\r\n * OrderRepository.\r\n *\r\n * @author Arpad Horvath\r\n */\r\n\r\n class OrderBuilderImpl implements system.OrderBuilder {\r\n\r\n    /**\r\n     * static singleton reference to OrderBuilder instance (singleton pattern).\r\n     */\r\n    private static OrderBuilderImpl orderBuilder_instance = null;\r\n\r\n    /**\r\n     * Repository dependencies.\r\n     */\r\n    private final DataRepository.Repository customerRepository;\r\n    //\r\n    private final DataRepository.Repository articleRepository;\r\n    //\r\n    private final DataRepository.Repository orderRepository;\r\n\r\n\r\n    /**\r\n     * Provide access to RTE OrderBuilder singleton instance (singleton pattern).\r\n     *\r\n     * @param runtime dependency to resolve Repository dependencies.\r\n     * @return\r\n     */\r\n    public static OrderBuilderImpl getInstance(Runtime runtime) {\r\n        if (orderBuilder_instance == null) {\r\n            orderBuilder_instance = new OrderBuilderImpl(runtime);\r\n        }\r\n        return orderBuilder_instance;\r\n    }\r\n\r\n\r\n    /**\r\n     * Private constructor to prevent external instantiation (singleton pattern).\r\n     *\r\n     * @param runtime dependency injected from where repository\r\n     *                dependencies are resolved.\r\n     */\r\n    OrderBuilderImpl(Runtime runtime) {\r\n        this.customerRepository = runtime.getCustomerRepository();\r\n        this.articleRepository = runtime.getArticleRepository();\r\n        this.orderRepository = runtime.getOrderRepository();\r\n    }\r\n\r\n\r\n    /**\r\n     * Save order to OrderRepository.\r\n     *\r\n     * @param order saved to OrderRepository\r\n     * @return chainable self-reference\r\n     */\r\n    @Override\r\n    public boolean accept(Order order) {\r\n        InventoryManager inventoryManager = new InventoryManagaerMOCK();\r\n        boolean validOrder = inventoryManager.isFillable(order);\r\n        if (validOrder) {\r\n            orderRepository.save(order);\r\n        }\r\n        return validOrder;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Build and save orders to OrderRepository.\r\n     *\r\n     * @return chainable self-reference\r\n     */\r\n    public OrderBuilderImpl build() {\r\n\r\n        DataRepository.Repository crep = customerRepository;\r\n        /*\r\n         * Look up customers from CustomerRepository.\r\n         */\r\n        Customer eric = (Customer) crep.findById(892474).get();\r\n        Customer anne = (Customer) crep.findById(643270).get();\r\n        Customer tim = (Customer) crep.findById(286516).get();\r\n        Customer nadine = (Customer) crep.findById(412396).get();\r\n        Customer khaled = (Customer) crep.findById(456454).get();\r\n        Customer lena = (Customer) crep.findById(556849).get();\r\n        Customer max = (Customer) crep.findById(482596).get();\r\n        Customer brigitte = (Customer) crep.findById(660380).get();\r\n        Customer joel = (Customer) crep.findById(582596).get();\r\n\r\n        DataRepository.Repository arep = articleRepository;\r\n        /*\r\n         * Look up articles from ArticleRepository.\r\n         */\r\n        Article tasse = (Article) arep.findById(\"SKU-458362\").get();\r\n        Article becher = (Article) arep.findById(\"SKU-693856\").get();\r\n        Article kanne = (Article) arep.findById(\"SKU-518957\").get();\r\n        Article teller = (Article) arep.findById(\"SKU-638035\").get();\r\n        Article buch_Java = (Article) arep.findById(\"SKU-278530\").get();\r\n        Article buch_OOP = (Article) arep.findById(\"SKU-425378\").get();\r\n        Article pfanne = (Article) arep.findById(\"SKU-300926\").get();\r\n        Article helm = (Article) arep.findById(\"SKU-663942\").get();\r\n        Article karte = (Article) arep.findById(\"SKU-583978\").get();\r\n\r\n        /*\r\n         * Build orders.\r\n         */\r\n\r\n        // Eric's 1st order\r\n        Order o8592 = new Order(eric)    // new order for Eric\r\n                .setId(\"8592356245\")    // assign order-id: 8592356245\r\n                // add items to order\r\n                .addItem(teller, 4)    // 4 Teller, 4x 6.49 �\r\n                .addItem(becher, 8)    // 8 Becher, 8x 1.49 �\r\n                .addItem(buch_OOP, 1)    // 1 Buch \"OOP\", 1x 79.95 �, 7% MwSt (5.23�)\r\n                .addItem(tasse, 4);    // 4 Tassen, 4x 2.99 �\r\n        //\r\n        // Anne's order\r\n        Order o3563 = new Order(anne)\r\n                .setId(\"3563561357\")\r\n                .addItem(teller, 2)\r\n                .addItem(tasse, 2);\r\n        //\r\n        // Eric's 2nd order\r\n        Order o5234 = new Order(eric)\r\n                .setId(\"5234968294\")\r\n                .addItem(kanne, 1);\r\n        //\r\n        // Nadine's order\r\n        Order o6135 = new Order(nadine)\r\n                .setId(\"6135735635\")\r\n                .addItem(teller, 12)\r\n                .addItem(buch_Java, 1)\r\n                .addItem(buch_OOP, 1);\r\n        //\r\n        // Eric's 3rd order\r\n        Order o7356 = new Order(eric)\r\n                .setId(\"7356613535\")\r\n                .addItem(helm, 1)\r\n                .addItem(karte, 1);\r\n        //\r\n        // Eric's 4th order\r\n        Order o4450 = new Order(eric)\r\n                .setId(\"4450735661\")\r\n                .addItem(tasse, 3)\r\n                .addItem(becher, 3)\r\n                .addItem(kanne, 1);\r\n        //\r\n        // Lena's 1sr order\r\n        Order o6173 = new Order(lena)\r\n                .setId(\"6173535635\")\r\n                .addItem(buch_Java, 1)\r\n                .addItem(karte, 1);\r\n        //\r\n        // Tim's 1sr order\r\n        Order o6174 = new Order(tim)\r\n                .setId(\"6356351735\")\r\n                .addItem(buch_Java, 1)\r\n                .addItem(buch_OOP, 1);\r\n        //\r\n        // Khaled's 1sr order\r\n        Order o6175 = new Order(khaled)\r\n                .setId(\"3563617355\")\r\n                .addItem(teller, 4)\r\n                .addItem(becher, 4)\r\n                .addItem(pfanne, 1);\r\n        //\r\n        // Brigitte's 1sr order\r\n        Order o6176 = new Order(brigitte)\r\n                .setId(\"4434573683\")\r\n                .addItem(teller, 6)\r\n                .addItem(tasse, 6);\r\n        //\r\n        // Joel's 1sr order\r\n        Order o6177 = new Order(joel)\r\n                .setId(\"5356173635\")\r\n                .addItem(buch_Java, 1)\r\n                .addItem(karte, 1);\r\n        //\r\n        // Max's 1sr order\r\n        Order o6178 = new Order(max)\r\n                .setId(\"9356736867\")\r\n                .addItem(helm, 1)\r\n                .addItem(karte, 2)\r\n                .addItem(buch_Java, 1);\r\n        //\r\n        // Lena's 2nd order\r\n        Order o6179 = new Order(lena)\r\n                .setId(\"5356617335\")\r\n                .addItem(teller, 12)\r\n                .addItem(tasse, 12)\r\n                .addItem(pfanne, 2);\r\n\r\n        /*\r\n         * Save orders to OrderRepository.\r\n         */\r\n        accept(o8592);\r\n        accept(o3563);\r\n        accept(o5234);\r\n        accept(o6135);\r\n        accept(o7356);\r\n        accept(o4450);\r\n        accept(o6173);    // total value (all orders):  |   642.70�|   76.78�|\r\n        //\r\n//\t\taccept( o6174 );\r\n//\t\taccept( o6175 );\r\n//\t\taccept( o6176 );\r\n//\t\taccept( o6177 );\r\n//\t\taccept( o6178 );\r\n//\t\taccept( o6179 );\t// total value (all orders):  | 1,414.73�|  176.40�|\r\n\r\n        return this;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/system/impl/OrderBuilderImpl.java b/src/system/impl/OrderBuilderImpl.java
--- a/src/system/impl/OrderBuilderImpl.java	(revision 9c74f4c80ac7cd661d24357411b88dddd48958ba)
+++ b/src/system/impl/OrderBuilderImpl.java	(date 1638734685905)
@@ -68,6 +68,7 @@
     @Override
     public boolean accept(Order order) {
         InventoryManager inventoryManager = new InventoryManagaerMOCK();
+
         boolean validOrder = inventoryManager.isFillable(order);
         if (validOrder) {
             orderRepository.save(order);
